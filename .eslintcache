[{"/media/ryan/New Volume/reactexer/mangomessenger/src/index.js":"1","/media/ryan/New Volume/reactexer/mangomessenger/src/reportWebVitals.js":"2","/media/ryan/New Volume/reactexer/mangomessenger/src/App.js":"3","/media/ryan/New Volume/reactexer/mangomessenger/src/Message.js":"4","/media/ryan/New Volume/reactexer/mangomessenger/src/conn.js":"5","/media/ryan/New Volume/reactexer/mangomessenger/src/pointer.js":"6","/media/ryan/New Volume/reactexer/mangomessenger/src/color.js":"7","/media/ryan/New Volume/reactexer/mangomessenger/src/ChatRoom.js":"8"},{"size":500,"mtime":1610741328977,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610741329031,"results":"11","hashOfConfig":"10"},{"size":967,"mtime":1610994232134,"results":"12","hashOfConfig":"10"},{"size":731,"mtime":1610992667374,"results":"13","hashOfConfig":"10"},{"size":433,"mtime":1610998611292,"results":"14","hashOfConfig":"10"},{"size":2698,"mtime":1610997593556,"results":"15","hashOfConfig":"10"},{"size":1501,"mtime":1610996297385,"results":"16","hashOfConfig":"10"},{"size":3321,"mtime":1610999276848,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"qcjiva",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/media/ryan/New Volume/reactexer/mangomessenger/src/index.js",[],["37","38"],"/media/ryan/New Volume/reactexer/mangomessenger/src/reportWebVitals.js",[],"/media/ryan/New Volume/reactexer/mangomessenger/src/App.js",[],"/media/ryan/New Volume/reactexer/mangomessenger/src/Message.js",[],"/media/ryan/New Volume/reactexer/mangomessenger/src/conn.js",[],"/media/ryan/New Volume/reactexer/mangomessenger/src/pointer.js",["39"],"import React,{useState} from 'react'\nimport { Button, FormControl,TextField } from '@material-ui/core';\nimport MeetingRoomRoundedIcon from '@material-ui/icons/MeetingRoomRounded';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport \"./App.css\";\n\nfunction Pointer(props) {\n\n    const[inp, setInput]=useState('');\n    const useStyles = makeStyles({\n        title: {\n          fontSize: 14,\n        },\n        pos: {\n          marginBottom: 12,\n        },\n      });\n    const classes = useStyles();\n    const sendpointer = (event)=>{\n        event.preventDefault();\n        props.setstate(inp);\n        setInput('');\n      }\n\n    return (\n        <div>\n            <Card className='maincard' variant=\"outlined\">\n                <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                    Eggie Anonymous Chat\n                </Typography>\n                <br />\n                <Typography className={classes.pos} color=\"textSecondary\">\n                    keep the community clean! <br />\n                    we hold no responsibility for your action!\n\n                </Typography>\n\n                    <br />\n                    <form>\n                    <FormControl>\n                        <div>\n                            <TextField \n                            id=\"outlined-basic\" \n                            className=\"inputpointer\" \n                            value={inp} \n                            onChange={event=>setInput(event.target.value)}  \n                            label=\"Room Pointer\" \n                            variant=\"outlined\"\n                            size=\"small\" />\n                            <Button\n                                variant=\"contained\"\n                                onClick={sendpointer}  \n                                disabled={!inp} \n                                type='submit'\n                                className=\"submitbtn\"\n                            >\n                            <MeetingRoomRoundedIcon/>  \n                            </Button>\n                        </div>\n\n                        </FormControl>\n                    </form>\n                </CardContent>\n                <br/><br/>\n                <p style={{color:\"rgb(147, 147, 147)\"}}>some copyright statements here\n            <br />built by <a style={{color:\"rgb(147, 147, 147)\"}} href=\"http://mirzaee.info\" target=\"_blank\"> Omid Mirzaee Yazdi.</a> powered by passion</p>\n            </Card>\n            \n        </div>\n\n    )\n}\n\nexport default Pointer\n","/media/ryan/New Volume/reactexer/mangomessenger/src/color.js",[],"/media/ryan/New Volume/reactexer/mangomessenger/src/ChatRoom.js",["40"],"import React,{useState, useEffect} from 'react'\nimport Message from './Message';\nimport { Button, FormControl, Card,TextField, CardContent, Typography } from '@material-ui/core';\nimport Send from '@material-ui/icons/Send';\n\nimport FlipMove from 'react-flip-move';\nimport firebase from 'firebase';\nimport db from './conn';\n\nfunction ChatRoom(props) {\n\n    const[input, setInput]=useState('');\n    const[msg, setmsg]=useState([]);\n\n    useEffect(() => {\n        db.collection(props.pointer).orderBy('timestamp','desc').onSnapshot(snapshot=>{\n          setmsg(snapshot.docs.map(doc => ({id:doc.id, data: doc.data()})))\n        })\n      }, [])\n    \n    const sendmsg = (event)=>{\n        event.preventDefault();\n        db.collection(props.pointer).add({\n          message: input, \n          color: props.clr,\n          timestamp:firebase.firestore.FieldValue.serverTimestamp(),\n        });\n        setInput('');\n      }\n    \n    return (\n        <Card className='maincardchat' variant=\"outlined\">\n            <CardContent>\n                <div>\n                <Typography variant=\"h5\" style={{textAlign:\"left\", marginLeft:\"10px\", marginTop:\"-10px\"}} component=\"h2\">\n                    {props.pointer}\n                    <Button\n                        variant=\"contained\"\n                        onClick={props.clearclr}  \n                        type='submit'\n                        className=\"chngbtns\"\n                    >Change color</Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={props.clearpointer}  \n                        type='submit'\n                        className=\"chngbtns\"\n                    >Change Room</Button>\n                </Typography>\n                <br />\n                </div>\n\n            \n                    <div className=\"chatsec\">\n                        <FlipMove>\n                            {\n                            msg.map((arg)=>(\n                                <Message key={arg.id} colormsg={arg.data.color} colorusr={props.clr} cont={arg.data.message} />\n                            ))\n                            }\n                        </FlipMove>\n                    </div>\n                    <form>\n                        <FormControl>\n                            <div className=\"sbmtfld\">\n                                <TextField \n                                    id=\"outlined-basic\" \n                                    className=\"inputpointer\" \n                                    value={input} \n                                    onChange={event=>setInput(event.target.value)}  \n                                    label=\"Message\" \n                                    variant=\"outlined\"\n                                    size=\"small\" />\n                                <Button\n                                    variant=\"contained\"\n                                    onClick={sendmsg}  \n                                    disabled={!input} \n                                    type='submit'\n                                    className=\"submitbtn\"\n                                ><Send/></Button>\n                            </div>\n                        </FormControl>\n                    </form>\n            </CardContent>\n\n        </Card>\n    )\n}\n\nexport default ChatRoom\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":70,"column":28,"nodeType":"47","endLine":70,"endColumn":111},{"ruleId":"48","severity":1,"message":"49","line":19,"column":10,"nodeType":"50","endLine":19,"endColumn":12,"suggestions":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.pointer'. Either include it or remove the dependency array.","ArrayExpression",["54"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [props.pointer]",{"range":"57","text":"58"},[636,638],"[props.pointer]"]